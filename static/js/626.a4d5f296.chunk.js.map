{"version":3,"file":"static/js/626.a4d5f296.chunk.js","mappings":"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","sources":["components/BooksTable/BookDetails/BookDetails.jsx","components/BooksTable/BooksTableRow/BooksTableRow.jsx","components/BooksTable/BooksTable.jsx","pages/Books/Books.jsx"],"sourcesContent":["import Box from '@mui/material/Box';\nimport Collapse from '@mui/material/Collapse';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Typography from '@mui/material/Typography';\n\nexport const BookDetails = ({ isOpen, book }) => {\n  const {\n    imageLinks,\n    publisher = 'Not defined',\n    publishedDate = 'Not defined',\n    categories = ['No categories'],\n    avarageRating = 'Not defined',\n    authors = ['No authors'],\n  } = book.volumeInfo;\n\n  return (\n    <TableRow>\n      <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n        <Collapse in={isOpen} timeout='auto' unmountOnExit>\n          <Box sx={{ margin: 1 }}>\n            <Typography variant='h6' gutterBottom component='div'>\n              Book details\n            </Typography>\n            <Table size='small' aria-label='purchases'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Image</TableCell>\n                  <TableCell>Publisher</TableCell>\n                  <TableCell>Publish date</TableCell>\n                  <TableCell align='right'>Categories</TableCell>\n                  <TableCell align='right'>Avarage Raiting</TableCell>\n                  <TableCell align='right'>More books ot the author</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow key={`${book.id}#details`}>\n                  <TableCell component='th' scope='row'>\n                    <img\n                      src={imageLinks.smallThumbnail}\n                      alt='Book poster'\n                      width='100px'\n                      height='160px'\n                    />\n                  </TableCell>\n                  <TableCell>{publisher}</TableCell>\n                  <TableCell>{publishedDate}</TableCell>\n                  <TableCell align='right'>\n                    <ul>\n                      {categories?.map((category) => (\n                        <li key={category}>{category}</li>\n                      ))}\n                    </ul>\n                  </TableCell>\n                  <TableCell align='right'>{avarageRating}</TableCell>\n                  <TableCell>\n                    {authors?.map((author) => (\n                      <button type='button' key={author}>{`${author}`}</button>\n                    ))}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </Box>\n        </Collapse>\n      </TableCell>\n    </TableRow>\n  );\n};\n","import { useState } from 'react';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport IconButton from '@mui/material/IconButton';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport { BookDetails } from '../BookDetails/BookDetails';\nimport { useDispatch } from 'react-redux';\nimport { toggleIsDetailsShown } from '../../../redux/booksSlice';\n\nexport const BooksTableRow = ({ book, index }) => {\n  const [isOpen, setIsOpen] = useState();\n  const dispatch = useDispatch();\n  const onRowClick = () => {\n    dispatch(toggleIsDetailsShown(!isOpen));\n    setIsOpen(!isOpen);\n  };\n  const {\n    title = 'Not defined',\n    language = 'Not defined',\n    pageCount = 'Not defined',\n    previewLink = 'Not defined',\n    authors,\n  } = book.volumeInfo;\n\n  return (\n    <>\n      <TableRow\n        selected={isOpen}\n        sx={{ '& > *': { borderBottom: 'unset' } }}\n        onClick={() => onRowClick(book)}\n      >\n        <TableCell component='th' scope='row'>\n          {index + 1}\n        </TableCell>\n        <TableCell>{title}</TableCell>\n        <TableCell align='right'>{book.id}</TableCell>\n        <TableCell align='right'>{book.kind}</TableCell>\n        <TableCell align='right'>\n          {authors ? book.volumeInfo.authors.join(', ') : 'Not defined'}\n        </TableCell>\n        <TableCell align='right'>{language}</TableCell>\n        <TableCell align='right'>{pageCount}</TableCell>\n        <TableCell align='right'>\n          <a\n            href={previewLink}\n            target='_blank'\n            rel='noopener noreferrer nofollow'\n          >\n            Preview\n          </a>\n        </TableCell>\n        <TableCell>\n          <IconButton aria-label='expand row' size='small'>\n            {isOpen ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n      </TableRow>\n      <BookDetails isOpen={isOpen} book={book} />\n    </>\n  );\n};\n","import Table from '@mui/material/Table';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableBody from '@mui/material/TableBody';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { useBooks } from '../../hooks/useBooks';\nimport { BooksTableRow } from './BooksTableRow/BooksTableRow';\nimport { TablePagination } from '@mui/material';\nimport { useMemo, useState } from 'react';\n\nexport const BooksTable = () => {\n  const { books } = useBooks();\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [dense, setDense] = useState(false);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - books.length) : 0;\n\n  // const visibleRows = useMemo(\n  //   () =>\n  //     stableSort(rows, getComparator(order, orderBy)).slice(\n  //       page * rowsPerPage,\n  //       page * rowsPerPage + rowsPerPage\n  //     ),\n  //   [order, orderBy, page, rowsPerPage]\n  // );\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label='collapsible table'>\n        <TableHead>\n          <TableRow>\n            <TableCell>Number</TableCell>\n            <TableCell>Book Title</TableCell>\n            <TableCell align='right'>ID</TableCell>\n            <TableCell align='right'>Kind</TableCell>\n            <TableCell align='right'>Author</TableCell>\n            <TableCell align='right'>Language</TableCell>\n            <TableCell align='right'>PageCount</TableCell>\n            <TableCell align='right'>Prewiev&nbsp;Link</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {books?.map((book, index) => (\n            <BooksTableRow key={book.id} book={book} index={index} />\n          ))}\n        </TableBody>\n      </Table>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 20]}\n        component='div'\n        count={books.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </TableContainer>\n  );\n};\n","import { BooksTable } from '../../components/BooksTable/BooksTable';\n\nconst Books = () => {\n  return (\n    <>\n      <BooksTable />\n    </>\n  );\n};\n\nexport default Books;\n"],"names":["BookDetails","_ref","isOpen","book","_book$volumeInfo","volumeInfo","imageLinks","_book$volumeInfo$publ","publisher","_book$volumeInfo$publ2","publishedDate","_book$volumeInfo$cate","categories","_book$volumeInfo$avar","avarageRating","_book$volumeInfo$auth","authors","_jsx","TableRow","children","TableCell","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","_jsxs","Box","sx","margin","Typography","variant","gutterBottom","component","Table","size","TableHead","align","TableBody","scope","src","smallThumbnail","alt","width","height","map","category","author","type","concat","id","BooksTableRow","index","_useState","useState","_useState2","_slicedToArray","setIsOpen","dispatch","useDispatch","_book$volumeInfo$titl","title","_book$volumeInfo$lang","language","_book$volumeInfo$page","pageCount","_book$volumeInfo$prev","previewLink","_Fragment","selected","borderBottom","onClick","toggleIsDetailsShown","kind","join","href","target","rel","IconButton","KeyboardArrowUpIcon","KeyboardArrowDownIcon","BooksTable","books","useBooks","_useState3","_useState4","page","setPage","_useState5","_useState6","_useState7","_useState8","rowsPerPage","setRowsPerPage","Math","max","length","TableContainer","Paper","minWidth","TablePagination","rowsPerPageOptions","count","onPageChange","event","newPage","onRowsPerPageChange","parseInt","value"],"sourceRoot":""}